name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # オプション: 特定のファイル変更時のみ実行
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # オプション: PR作成者でフィルタリング
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          # オプション: モデルを指定（デフォルト: Claude Sonnet 4、Claude Opus 4を使用する場合はコメントを外す）
          # model: "claude-opus-4-20250514"

          # 自動レビュー用の直接プロンプト（@claudeメンションは不要）
          direct_prompt: |
            このプルリクエストをレビューして、以下の観点でフィードバックをお願いします：
            - コードの品質とベストプラクティス
            - 潜在的なバグや問題
            - パフォーマンスの考慮事項
            - セキュリティの懸念事項
            - テストカバレッジ

            建設的で役立つフィードバックを日本語で提供してください。

          # オプション: ファイルタイプに基づいてレビューをカスタマイズ
          # direct_prompt: |
          #   以下の観点でPRをレビューしてください：
          #   - TypeScriptファイル: 型安全性と適切なインターフェースの使用
          #   - APIエンドポイント: セキュリティ、入力検証、エラーハンドリング
          #   - Reactコンポーネント: パフォーマンス、アクセシビリティ、ベストプラクティス
          #   - テスト: カバレッジ、エッジケース、テストの品質

          # オプション: 作成者によって異なるプロンプト
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'ようこそ！初めてのコントリビューターからのPRです。励ましの言葉と共に、提案について詳しい説明を提供してください。' ||
          #   'コーディング規約とベストプラクティスに焦点を当てた詳細なコードレビューを提供してください。' }}

          # オプション: テストやリンティングを実行するための特定のツールを追加
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

          # オプション: 特定の条件でレビューをスキップ
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
